name: release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Use Node (for npm publish)
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install deps (bun)
        run: bun install --frozen-lockfile

      - name: Build
        run: |
          if jq -e '.scripts.build' package.json >/dev/null; then
            bun run build
          else
            echo "No build script found, skipping"
          fi

      - name: Ensure tag matches package.json version
        run: |
          PKG_VERSION=$(jq -r .version package.json)
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          TAG_VERSION=${TAG_VERSION#v}
          if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
            echo "package.json version ($PKG_VERSION) != git tag ($TAG_VERSION)"
            exit 1
          fi

      - name: Check bin entries
        run: |
          if jq -e '.bin' package.json >/dev/null; then
            echo "bin entries present"; jq .bin package.json
          else
            echo "No bin field, proceeding"
          fi

      - name: Publish to npm (with provenance)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --provenance --access public